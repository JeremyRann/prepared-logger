// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PreparedLogger.Data;

namespace PreparedLogger.Data.Migrations
{
    [DbContext(typeof(PreparedLoggerContext))]
    partial class PreparedLoggerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PreparedLogger.Data.Models.Log", b =>
                {
                    b.Property<int>("LogID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.HasKey("LogID");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("PreparedLogger.Data.Models.LogEntry", b =>
                {
                    b.Property<int>("LogEntryID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LogID");

                    b.Property<string>("Text");

                    b.HasKey("LogEntryID");

                    b.HasIndex("LogID");

                    b.ToTable("LogEntries");
                });

            modelBuilder.Entity("PreparedLogger.Data.Models.LogEntry", b =>
                {
                    b.HasOne("PreparedLogger.Data.Models.Log")
                        .WithMany("LogEntries")
                        .HasForeignKey("LogID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
